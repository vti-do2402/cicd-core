name: CI React

on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        default: ubuntu-latest
      node_version:
        type: string
        default: '18'
      artifacts:
        type: string
        default: 'artifacts'
      skip_sonar:
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false

jobs:
  code-quality:
    name: 'Code Quality'
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install Dependencies
        run: npm install --include=dev

      - name: Run Lint
        run: npm run lint -- --fix
        continue-on-error: true

      - name: Run Tests
        run: npm run test

      - name: Analyze with SonarQube
        if: inputs.skip_sonar == false
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

  build:
    name: Build
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install Dependencies
        run: |
          sudo apt-get update --no-install-recommends
          sudo apt-get install -y zip gzip tar
          npm install --omit=dev

      - name: Build
        run: npm run build -- --no-lint --no-test

      - name: Compress Artifacts
        run: |
          set -e
          set -o pipefail

          log() {
            echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
          }

          log "Compressing artifacts"
          if [ -d "build" ]; then
            log "Compressing build directory"
            tar -czvf build.tar.gz build/
            zip -r build.zip build/
            gzip -r build/
          else
            log "Build directory not found"
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifacts }}
          path: build.[tar.gz|zip|gzip]
          retention-days: 1
          if-no-files-found: error

name: Build, Tag, and Push Docker Image to Amazon ECR

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        default: mock-project
      environment:
        type: string
        default: development
      workspace:
        type: string
        default: quentin-mock-project-dev
      ecr-repository:
        required: true
        type: string
      dockerfile:
        type: string
        default: Dockerfile
      default_bump:
        type: string
        default: patch
        description: The default pump to use for the version(false, patch, minor, major)
    secrets:
      #   # AWS_ASSUME_ROLE_ARN:
      #   #   required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

permissions:
  contents: write
  packages: write

jobs:
  tag-commit:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      version: ${{ steps.tag_version.outputs.new_tag }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ github.token }}
          default_bump: ${{ inputs.default_bump }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: true

  build-and-push:
    needs: tag-commit
    runs-on: ${{ inputs.runs-on }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # role-to-assume: ${ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Follow: https://github.com/aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          WORKSPACE: ${{ inputs.workspace }}
          REPOSITORY: ${{ inputs.ecr-repository }}
          IMAGE_TAG: ${{ needs.tag-commit.outputs.version }}
          DOCKERFILE: ${{ inputs.dockerfile }}
        run: |
          docker build -t $WORKSPACE/$REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
          docker tag $WORKSPACE/$REPOSITORY:$IMAGE_TAG $REGISTRY/$WORKSPACE/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$WORKSPACE/$REPOSITORY:$IMAGE_TAG
